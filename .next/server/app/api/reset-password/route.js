"use strict";(()=>{var e={};e.id=5059,e.ids=[5059],e.modules={53524:e=>{e.exports=require("@prisma/client")},20399:e=>{e.exports=require("next/dist/compiled/next-server/app-page.runtime.prod.js")},30517:e=>{e.exports=require("next/dist/compiled/next-server/app-route.runtime.prod.js")},44172:(e,r,t)=>{t.r(r),t.d(r,{originalPathname:()=>x,patchFetch:()=>h,requestAsyncStorage:()=>l,routeModule:()=>u,serverHooks:()=>w,staticGenerationAsyncStorage:()=>c});var s={};t.r(s),t.d(s,{POST:()=>d});var a=t(73278),o=t(45002),n=t(54877),i=t(82208),p=t(71309);async function d(e){try{let{token:r,password:t}=await e.json(),s=await i.L.resetToken.findUnique({where:{token:r}});if(!s||s.expiry<new Date)return p.NextResponse.json({status:400,data:"Invalid or expired token"});return await i.L.userElectron.update({where:{id:s.userId},data:{password:t}}),await i.L.resetToken.delete({where:{token:r}}),p.NextResponse.json({status:200,data:"Password reset successfully"})}catch(e){return p.NextResponse.json({status:500,data:"Internal server error"})}}let u=new a.AppRouteRouteModule({definition:{kind:o.x.APP_ROUTE,page:"/api/reset-password/route",pathname:"/api/reset-password",filename:"route",bundlePath:"app/api/reset-password/route"},resolvedPagePath:"C:\\Users\\Prajval Bhardwaj\\Desktop\\opal_codes\\video\\src\\app\\api\\reset-password\\route.ts",nextConfigOutput:"",userland:s}),{requestAsyncStorage:l,staticGenerationAsyncStorage:c,serverHooks:w}=u,x="/api/reset-password/route";function h(){return(0,n.patchFetch)({serverHooks:w,staticGenerationAsyncStorage:c})}},73278:(e,r,t)=>{e.exports=t(30517)},82208:(e,r,t)=>{t.d(r,{L:()=>a});var s=t(53524);let a=globalThis.prisma||new s.PrismaClient}};var r=require("../../../webpack-runtime.js");r.C(e);var t=e=>r(r.s=e),s=r.X(0,[9379,1309],()=>t(44172));module.exports=s})();